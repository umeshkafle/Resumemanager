#!/usr/bin/env ruby
require "rubygems"
require "bundler/setup"
require "mailman"
<<<<<<< HEAD
require 'dotenv'

Dotenv.load
#require "#{File.dirname __FILE__}/../config/environment"


username = ''                       
### OR ###
username = ENV['GMAIL_USERNAME']

puts "Using username='#{username}'..." 

Mailman.config.pop3 = {
  server: 'pop.gmail.com', port: 995, ssl: true,
  username: username, 
  password: ENV['GMAIL_PASSWORD']
}

Mailman::Application.run do
  default do
    begin
      p "Found a new message"
     
      if message.multipart?
         
        the_message_html = message.html_part.body.decoded
        the_message_text = message.text_part.body.decoded
        #binding.pry
        the_message_attachments = []        
        curriculumvitae = Curriculumvitae.new
        curriculumvitae.from = message.from.first
        curriculumvitae.save

        message.attachments.each do |att|
          file = StringIO.new(att.decoded)
          #binding.pry
          file.class.class_eval { attr_accessor :original_filename, :content_type}
          file.original_filename = att.filename
          file.content_type = att.mime_type
          #binding.pry
          attachment = curriculumvitae.attachments.build
          attachment.attached_file = file
          #attachment.curriculumvitae = Curriculumvitae.create(:from => message.from.first, :to => message.to.first, :subject => message.subject, :html_body => the_message_html, :text_body => the_message_text)
          attachment.save
          curriculumvitae.save
          the_message_attachments << attachment
        end
      else
        the_message_html = message.body.decoded
        the_message_text = message.body.decoded
        the_message_attachments = []
      end

    rescue Exception => e
      Mailman.logger.error "Exception occured while receiving message:\n#{message}"
      Mailman.logger.error [e, *e.backtrace].join("\n")
    end
  end
end
